version: 0.2

phases:
  pre_build:
    commands:
      - echo "=== AWS CodeBuild Configuration ==="
      - echo "Available Node.js $(node -v)"
      - echo "Available npm $(npm -v)"
      - echo "Target Node.js $(cat .nvmrc 2>/dev/null || echo 'Not specified')"
      - echo "Build environment: $(uname -a)"
      - echo ""
      
      # Check Node.js compatibility
      - |
        CURRENT_MAJOR=$(node -v | sed 's/v//' | cut -d. -f1)
        echo "Current Node.js major version v$CURRENT_MAJOR"
        
        if [ "$CURRENT_MAJOR" -ge "18" ]; then
          echo "✅ Node.js version is compatible for Next.js (v$CURRENT_MAJOR >= v18)"
        else
          echo "❌ Node.js version too old (v$CURRENT_MAJOR < v18)"
          echo "This project requires Node.js 18 or higher"
          exit 1
        fi
      
      - echo ""
      - echo "=== Installing Dependencies ==="
      - npm config set legacy-peer-deps true
      - npm config set fund false
      - npm config set audit-level moderate
      
      # Clean install
      - echo "Installing dependencies..."
      - npm ci --no-audit --prefer-offline
      
      # Make build script executable
      - chmod +x scripts/fix-swc-build.sh
      
      # Verify installation
      - echo ""
      - echo "Final environment verification:"
      - "echo \"Node.js $(node -v)\""
      - "echo \"npm $(npm -v)\""
      - echo "Next.js version: $(npm list next --depth=0)"

  build:
    commands:
      - echo "=== Building Application with SWC Fix ==="
      
      # Use the comprehensive SWC build fix script
      - bash scripts/fix-swc-build.sh

artifacts:
  files:
    - '**/*'
  base-directory: .next

cache:
  paths:
    - 'node_modules/**/*'
    - '.next/cache/**/*'
    - '.npm/**/*' 