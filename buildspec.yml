version: 0.2

phases:
  pre_build:
    commands:
      - echo "=== AWS CodeBuild Configuration ==="
      - echo "Available Node.js $(node -v)"
      - echo "Available npm $(npm -v)"
      - echo "Target Node.js $(cat .nvmrc 2>/dev/null || echo 'Not specified')"
      - echo "Build environment: $(uname -a)"
      - echo ""
      
      # Check Node.js compatibility
      - |
        CURRENT_MAJOR=$(node -v | sed 's/v//' | cut -d. -f1)
        echo "Current Node.js major version v$CURRENT_MAJOR"
        
        if [ "$CURRENT_MAJOR" -ge "18" ]; then
          echo "✅ Node.js version is compatible for Next.js (v$CURRENT_MAJOR >= v18)"
        else
          echo "❌ Node.js version too old (v$CURRENT_MAJOR < v18)"
          echo "This project requires Node.js 18 or higher"
          exit 1
        fi
      
      # Set build-time environment variables with defaults
      - echo ""
      - echo "=== Setting Build Environment Variables ==="
      - export NODE_ENV=production
      - export NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-"https://api.medh.co/api/v1"}
      - export NEXT_TELEMETRY_DISABLED=1
      - export CI=true
      
      # Provide build-time defaults for missing secrets
      - export JWT_SECRET=${JWT_SECRET:-"build-time-placeholder-jwt-secret-minimum-32-chars"}
      - export API_KEY_SALT=${API_KEY_SALT:-"build-placeholder-salt"}
      - export API_KEY_HASH=${API_KEY_HASH:-"build-placeholder-hash"}
      - export SESSION_SECRET=${SESSION_SECRET:-"build-placeholder-session-secret"}
      - export REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET:-"build-placeholder-refresh-secret"}
      
      # Optional build-time defaults
      - export OPENAI_API_KEY=${OPENAI_API_KEY:-""}
      - export OPENAI_MODEL=${OPENAI_MODEL:-"gpt-4o-mini"}
      - export CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-"https://medh.co,https://www.medh.co"}
      - export RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-"900000"}
      - export RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-"100"}
      - export MAX_FILE_SIZE=${MAX_FILE_SIZE:-"5242880"}
      - export ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES:-"image/jpeg,image/png,image/gif,application/pdf"}
      - export SANITIZE_HTML=${SANITIZE_HTML:-"true"}
      - export ENABLE_XSS_PROTECTION=${ENABLE_XSS_PROTECTION:-"true"}
      - export ENABLE_CSRF_PROTECTION=${ENABLE_CSRF_PROTECTION:-"true"}
      
      - echo "Build environment variables configured with defaults for missing secrets"
      
      - echo ""
      - echo "=== Installing Dependencies ==="
      - npm config set legacy-peer-deps true
      - npm config set fund false
      - npm config set audit-level moderate
      
      # Clean install
      - echo "Installing dependencies..."
      - npm ci --no-audit --prefer-offline
      
      # Install SWC binaries for Linux x64 architecture
      - echo "Installing SWC binaries for AWS CodeBuild..."
      - npm install --no-save --no-audit @next/swc-linux-x64-gnu@15.4.3 || echo "Failed to install GNU binary"
      - npm install --no-save --no-audit @next/swc-linux-x64-musl@15.4.3 || echo "Failed to install MUSL binary"
      
      # Set SWC fallback environment variables
      - export NEXT_FORCE_SWC=false
      - export SWC_DISABLE_NEXT_SWC=1
      - echo "SWC fallback environment configured"
      
      # Make build scripts executable
      - chmod +x scripts/fix-swc-build.sh
      - chmod +x scripts/build-with-babel-fallback.sh
      
      # Verify installation
      - echo ""
      - echo "Final environment verification:"
      - "echo \"Node.js $(node -v)\""
      - "echo \"npm $(npm -v)\""
      - "echo \"NODE_ENV: $NODE_ENV\""
      - "echo \"NEXT_PUBLIC_API_URL: $NEXT_PUBLIC_API_URL\""
      - echo "Next.js version: $(npm list next --depth=0)"

  build:
    commands:
      - echo "=== Building Application with SWC Fix ==="
      
      # Ensure SWC fallback environment variables are set
      - export NEXT_FORCE_SWC=false
      - export SWC_DISABLE_NEXT_SWC=1
      - export NODE_OPTIONS="--max-old-space-size=6144"
      
      # Try SWC build first, fallback to Babel if it fails
      - bash scripts/fix-swc-build.sh || bash scripts/build-with-babel-fallback.sh

artifacts:
  files:
    - '**/*'
  base-directory: .next

cache:
  paths:
    - 'node_modules/**/*'
    - '.next/cache/**/*'
    - '.npm/**/*' 