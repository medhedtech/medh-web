version: 1
frontend:
  phases:
    preBuild:
      commands:
        - "echo '=== Starting Amplify Build ==='"
        - "echo 'Node.js version:' $(node -v)"
        - "echo 'npm version:' $(npm -v)"
        - "export NODE_ENV='production'"
        - "export NEXT_PUBLIC_API_URL='https://api.medh.co/api/v1'"
        - "export NEXT_PUBLIC_APP_ENV='production'"
        - "export JWT_SECRET='${JWT_SECRET:-fallback-jwt-secret-for-build}'"
        - "export API_KEY_SALT='${API_KEY_SALT:-fallback-salt}'"
        - "export SESSION_SECRET='${SESSION_SECRET:-fallback-session-secret}'"
        - "export MONGO_URI='${MONGO_URI}'"
        - "export NEXT_PUBLIC_GA_MEASUREMENT_ID='${NEXT_PUBLIC_GA_MEASUREMENT_ID}'"
        - "export NEXT_PUBLIC_GOOGLE_CLIENT_ID='${NEXT_PUBLIC_GOOGLE_CLIENT_ID}'"
        - "export OPENAI_API_KEY='${OPENAI_API_KEY}'"
        - "export NODE_OPTIONS='--max-old-space-size=8192'"
        - "export NEXT_TELEMETRY_DISABLED=1"
        - "npm config set legacy-peer-deps true"
        - "npm config set fund false"
        - "npm config set audit false"
        - "npm config set update-notifier false"
        - "echo 'Installing dependencies...'"
        - "rm -rf node_modules"
        - "npm ci || npm install"
        - "echo 'Verifying TailwindCSS installation...'"
        - "npm list tailwindcss autoprefixer postcss || echo 'Some packages missing'"
        - "echo 'Ensuring critical dependencies are installed...'"
        - "npm install --save autoprefixer postcss tailwindcss"
        - "echo 'Final verification...'"
        - "npm list tailwindcss autoprefixer postcss"
        - "ls -la node_modules/ | grep tailwind || echo 'TailwindCSS directory not found'"
        - "node -e \"console.log('TailwindCSS test:', require('tailwindcss'))\" || echo 'TailwindCSS require failed'"
    build:
      commands:
        - "echo 'Building Next.js application...'"
        - "npm run build"
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
appRoot: .
