version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "üîß Using Amplify default Node.js version (20.19.0)"
        - node --version
        - npm --version
        - export NEXT_TELEMETRY_DISABLED=1
        - export GENERATE_SOURCEMAP=false
        - export NODE_OPTIONS="--max-old-space-size=8192"
        - echo "üì¶ Installing dependencies using npm ci"
        - npm ci
    build:
      commands:
        - echo "üèó Running Next.js production build with standalone output"
        - npm run build

        # Ensure required server files and traces are inside the artifacts baseDirectory
        - echo "üìã Ensuring required files under .next/standalone/.next"
        - mkdir -p .next/standalone/.next/server
        # Find a trace emitted by Next (prefer server/trace, fallback to root trace). If none exists, create a minimal one so Amplify's check passes.
        - TRACE_SRC="$(find .next -maxdepth 3 -type f -name trace | head -n 1 || true)"
        - if [ -z "$TRACE_SRC" ]; then echo "{}" > .next/trace && TRACE_SRC=".next/trace" && echo "‚ö†Ô∏è Created minimal trace at .next/trace"; else echo "‚úÖ Found trace at $TRACE_SRC"; fi
        - cp -f "$TRACE_SRC" .next/standalone/.next/server/trace
        - cp -f "$TRACE_SRC" .next/standalone/.next/trace

        # required-server-files.json is used by platforms to resolve assets
        - RSF_SRC="$(find .next -maxdepth 2 -type f -name required-server-files.json | head -n 1 || true)"
        - if [ -n "$RSF_SRC" ]; then cp -f "$RSF_SRC" .next/standalone/.next/required-server-files.json; else echo "‚ö†Ô∏è required-server-files.json not found in .next"; fi

        # Static assets inside artifacts directory
        - mkdir -p .next/standalone/.next/static
        - cp -r .next/static/* .next/standalone/.next/static/ 2>/dev/null || true

        # Optional: prune size but DO NOT remove traces
        - rm -rf .next/standalone/src || true
        - find .next/standalone -type f -name "*.map" -delete || true
        - find .next/standalone/node_modules -type d -name "__tests__" -prune -exec rm -rf {} + || true
        - find .next/standalone/node_modules -type d -name "test" -prune -exec rm -rf {} + || true
        - rm -rf .next/standalone/node_modules/next/dist/build || true
        - rm -rf .next/standalone/node_modules/next/dist/compiled/webpack || true
        - rm -rf .next/standalone/node_modules/next/dist/compiled/terser || true
        - rm -rf .next/standalone/node_modules/next/node_modules/@img || true
        - rm -rf .next/standalone/node_modules/sharp || true
        - rm -rf .next/standalone/node_modules/@img || true
        - (cd .next/standalone && npm prune --omit=dev || true)

        # Sanity checks so we fail fast inside build phase (not after upload)
        - echo "üîé Validating required files in artifacts directory"
        - ls -la .next/standalone/.next | cat
        - ls -la .next/standalone/.next/server | cat
        - test -f .next/standalone/.next/server/trace || (echo "‚ùå Missing .next/standalone/.next/server/trace" && exit 1)
        - test -f .next/standalone/.next/trace || (echo "‚ùå Missing .next/standalone/.next/trace" && exit 1)
        - test -f .next/standalone/.next/required-server-files.json || echo "‚ö†Ô∏è required-server-files.json is missing (not fatal)"

        - echo "‚úÖ Build artifacts ready for Amplify"
        - du -sh .next/standalone/.next || true
  artifacts:
    baseDirectory: .next/standalone/.next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
      - ~/.npm
